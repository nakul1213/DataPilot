{"ast":null,"code":"const API_BASE = \"http://localhost:8000\";\nexport async function uploadAndRun(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  // Upload\n  const uploadRes = await fetch(`${API_BASE}/upload`, {\n    method: \"POST\",\n    body: formData\n  });\n  if (!uploadRes.ok) throw new Error(\"Upload failed\");\n  const {\n    file_id\n  } = await uploadRes.json();\n  log;\n  // Run\n  const runRes = await fetch(`${API_BASE}/run`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      file_id\n    })\n  });\n  if (!runRes.ok) throw new Error(\"Pipeline run failed\");\n  return runRes.json();\n}\nexport async function fetchFile(path) {\n  const res = await fetch(`http://localhost:8000/${path}`);\n  if (!res.ok) throw new Error(\"Failed to fetch file\");\n  return res.text();\n}","map":{"version":3,"names":["API_BASE","uploadAndRun","file","formData","FormData","append","uploadRes","fetch","method","body","ok","Error","file_id","json","log","runRes","headers","JSON","stringify","fetchFile","path","res","text"],"sources":["C:/Users/namitha/OneDrive/Desktop/agent-ds/frontend/src/api.js"],"sourcesContent":["const API_BASE = \"http://localhost:8000\";\r\n\r\nexport async function uploadAndRun(file) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  // Upload\r\n  const uploadRes = await fetch(`${API_BASE}/upload`, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n  if (!uploadRes.ok) throw new Error(\"Upload failed\");\r\n  const { file_id } = await uploadRes.json();\r\n  log\r\n  // Run\r\n  const runRes = await fetch(`${API_BASE}/run`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ file_id }),\r\n  });\r\n  if (!runRes.ok) throw new Error(\"Pipeline run failed\");\r\n  return runRes.json();\r\n}\r\n\r\nexport async function fetchFile(path) {\r\n  const res = await fetch(`http://localhost:8000/${path}`);\r\n  if (!res.ok) throw new Error(\"Failed to fetch file\");\r\n  return res.text();\r\n} "],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAE;EACvC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B;EACA,MAAMI,SAAS,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,SAAS,EAAE;IAClDQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EACF,IAAI,CAACG,SAAS,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACnD,MAAM;IAAEC;EAAQ,CAAC,GAAG,MAAMN,SAAS,CAACO,IAAI,CAAC,CAAC;EAC1CC,GAAG;EACH;EACA,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAAC,GAAGP,QAAQ,MAAM,EAAE;IAC5CQ,MAAM,EAAE,MAAM;IACdQ,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CP,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;MAAEN;IAAQ,CAAC;EAClC,CAAC,CAAC;EACF,IAAI,CAACG,MAAM,CAACL,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACtD,OAAOI,MAAM,CAACF,IAAI,CAAC,CAAC;AACtB;AAEA,OAAO,eAAeM,SAASA,CAACC,IAAI,EAAE;EACpC,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC,yBAAyBa,IAAI,EAAE,CAAC;EACxD,IAAI,CAACC,GAAG,CAACX,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACpD,OAAOU,GAAG,CAACC,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}